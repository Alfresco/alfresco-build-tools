name: "Terraform"

on:
  workflow_call:
    inputs:
      terraform_root_path:
        description: the path to the root module to apply
        type: string
        required: false
        default: .
      terraform_operation:
        description: the terraform operation to perform (apply or destroy)
        type: string
        required: false
      terraform_env:
        description: the terraform environment to use (e.g. dev, staging, prod)
        type: string
        required: false
      create_oidc_token_file:
        description: whether to create a file with an OIDC token for AWS
        type: boolean
        required: false
        default: false
    secrets:
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      BOT_GITHUB_TOKEN:
        required: false
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false
      RANCHER2_ACCESS_KEY:
        required: false
      RANCHER2_SECRET_KEY:
        required: false

jobs:
  compute_basic_vars:
    name: compute basic variables
    runs-on: ubuntu-latest
    steps:
      - name: Evaluate branch name
        id: basic_vars
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [ -n "${{ inputs.terraform_env }}" ]; then
            echo "Using environment from input: ${{ inputs.terraform_env }}"
            echo "environment_name=${{ inputs.terraform_env }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          BRANCH_NAME=${{ github.base_ref || github.ref_name }}
          if [ -n "${{ github.event.issue.pull_request }}" ]; then
            echo "Evaluating branch name for issue_comment event"
            BRANCH_NAME=$(gh pr view ${{ github.event.issue.pull_request.html_url }} --json baseRefName --jq '.baseRefName')
          fi

          BRANCH_LOWER=${BRANCH_NAME,,}
          if [ "$BRANCH_LOWER" == "main" ]; then
            environment="production"
          elif [ "$BRANCH_LOWER" == "develop" ]; then
            environment="develop"
          else
            echo "$BRANCH_LOWER doesn't have a matching environment"
            exit 1
          fi

          echo "Using environment: $environment"
          echo "environment_name=${environment}" >> "$GITHUB_OUTPUT"
    outputs:
      environment_name: ${{ steps.basic_vars.outputs.environment_name }}

  terraform:
    runs-on: ubuntu-latest
    needs:
      - compute_basic_vars
    environment: ${{ needs.compute_basic_vars.outputs.environment_name }}
    concurrency:
      group: ${{ needs.compute_basic_vars.outputs.environment_name }}
      cancel-in-progress: false
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RANCHER2_ACCESS_KEY: ${{ secrets.RANCHER2_ACCESS_KEY }}
      RANCHER2_SECRET_KEY: ${{ secrets.RANCHER2_SECRET_KEY }}
      RANCHER2_URL: ${{ vars.RANCHER2_URL }}
      RESOURCE_NAME: ${{ vars.RESOURCE_NAME }}
      TERRAFORM_HTTP_CREDENTIALS: |
        github.com/Alfresco=alfresco-build:${{ secrets.BOT_GITHUB_TOKEN }}
      TERRAFORM_PRE_RUN: |
        if [ ! -x ./aws/install ]; then
          curl -sSf https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
          unzip -q awscliv2.zip
        fi
        ./aws/install
      # https://github.com/dflook/terraform-github-actions/tree/main/terraform-apply#applying-a-plan-using-a-comment
      PR_CHECKOUT_REF: refs/pull/${{ github.event.issue.number }}/merge
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event_name == 'issue_comment' && env.PR_CHECKOUT_REF || '' }}

      - name: Install OIDC Client from Core Package
        if: ${{ inputs.create_oidc_token_file }}
        run: npm install @actions/core@1.11.0 @actions/http-client@2.2.3

      - name: Request token
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        if: ${{ inputs.create_oidc_token_file }}
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            let id_token = await coredemo.getIDToken("sts.amazonaws.com")
            coredemo.setOutput('id_token', id_token)

      - name: Save token to file
        if: ${{ inputs.create_oidc_token_file }}
        run: echo "${{ steps.idtoken.outputs.id_token }}" >> idtoken.json

      - name: Assume AWS Role if AWS_ROLE_ARN var is set
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        if: vars.AWS_ROLE_ARN != ''
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION}}
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: TerraformWorkflow

      - name: Load environment variables from yml
        uses: Alfresco/alfresco-build-tools/.github/actions/env-load-from-yaml@v8.23.2
        with:
          yml_path: ${{ inputs.terraform_root_path }}/tfenv.yml

      - name: Check vars requirements
        run: |
          if [ -z "${{ vars.RESOURCE_NAME }}" ]; then
            echo "RESOURCE_NAME must be set in the vars context to provide a unique identifier"
            exit 1
          fi
          if [ -z "${{ vars.TERRAFORM_STATE_BUCKET }}" ]; then
            echo "TERRAFORM_STATE_BUCKET must be set in the vars context"
            exit 1
          fi

      - name: Terraform validate
        if: github.event_name == 'pull_request'
        uses: dflook/terraform-validate@17dd9f24a2e9085562f32bcc8d2afc7a14c32c04 # v2.0.1
        with:
          path: ${{ inputs.terraform_root_path }}
          backend_config: |
            bucket=${{ vars.TERRAFORM_STATE_BUCKET }}
            key=${{ vars.RESOURCE_NAME }}/${{ inputs.terraform_root_path }}/terraform.tfstate

      - name: Terraform plan
        uses: dflook/terraform-plan@2ea39e86f0a175ae8776fb9f9a1ed25a1454511a # v2.0.1
        if: github.event_name == 'pull_request'
        with:
          label: ${{ vars.RESOURCE_NAME }} ${{ inputs.terraform_root_path }}
          path: ${{ inputs.terraform_root_path }}
          var_file: |
            ${{ inputs.terraform_root_path }}/common.tfvars
            ${{ inputs.terraform_root_path }}/${{ needs.compute_basic_vars.outputs.environment_name }}.tfvars
          backend_config: |
            bucket=${{ vars.TERRAFORM_STATE_BUCKET }}
            key=${{ vars.RESOURCE_NAME }}/${{ inputs.terraform_root_path }}/terraform.tfstate

      - name: Terraform apply
        uses: dflook/terraform-apply@70dfc63e60eb6a958c5673b004acce250432ecdc # v2.0.1
        if: github.event_name == 'push' || inputs.terraform_operation == 'apply' || (github.event_name == 'issue_comment' && contains(github.event.comment.body, 'terraform apply'))
        with:
          label: ${{ vars.RESOURCE_NAME }} ${{ inputs.terraform_root_path }}
          path: ${{ inputs.terraform_root_path }}
          auto_approve: ${{ inputs.terraform_operation == 'apply' }}
          var_file: |
            ${{ inputs.terraform_root_path }}/common.tfvars
            ${{ inputs.terraform_root_path }}/${{ needs.compute_basic_vars.outputs.environment_name }}.tfvars
          backend_config: |
            bucket=${{ vars.TERRAFORM_STATE_BUCKET }}
            key=${{ vars.RESOURCE_NAME }}/${{ inputs.terraform_root_path }}/terraform.tfstate

      - name: Terraform destroy
        uses: dflook/terraform-destroy@9464b7759e678feeabc2f0435dcde89ab3ea30d0 # v2.0.1
        if: inputs.terraform_operation == 'destroy'
        with:
          path: ${{ inputs.terraform_root_path }}
          var_file: |
            ${{ inputs.terraform_root_path }}/common.tfvars
            ${{ inputs.terraform_root_path }}/${{ needs.compute_basic_vars.outputs.environment_name }}.tfvars
          backend_config: |
            bucket=${{ vars.TERRAFORM_STATE_BUCKET }}
            key=${{ vars.RESOURCE_NAME }}/${{ inputs.terraform_root_path }}/terraform.tfstate
