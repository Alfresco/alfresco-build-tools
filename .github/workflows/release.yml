name: Release

on:
  pull_request:
    types:
    - closed
  workflow_dispatch:

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged == true
        steps:
          - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
            with:
              fetch-depth: 0
              ref: master
              token: ${{ secrets.BOT_GITHUB_TOKEN }}

          - name: Fetch next version
            run: |
              echo "VERSION=$(cat version.txt)" >> "$GITHUB_ENV"

          - name: Check if release is necessary
            id: release_guard
            run: |
              if git tag | grep -q "^${VERSION}$"; then
                echo "do_release=false" >> "$GITHUB_OUTPUT"
              else
                echo "do_release=true" >> "$GITHUB_OUTPUT"
              fi

          - name: Apply release changes
            if: steps.release_guard.outputs.do_release == 'true'
            run: |
              ./release.sh "$VERSION"

          - uses: stefanzweifel/git-auto-commit-action@b863ae1933cb653a53c021fe36dbb774e1fb9403 # v5.2.0
            with:
              branch: master
              skip_checkout: true
              commit_message: Release ${{ env.VERSION }}
              commit_user_name: ${{ vars.BOT_GITHUB_USERNAME }}
              commit_user_email: ${{ vars.BOT_GITHUB_EMAIL }}

          - name: Generate release notes
            if: steps.release_guard.outputs.do_release == 'true'
            env:
              GH_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
            run: gh release create "$VERSION" --generate-notes -t "$VERSION"
