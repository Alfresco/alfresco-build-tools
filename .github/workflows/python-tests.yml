name: Python Tests

on:
  push:
    branches: [ master ]
    paths:
      - 'gha-sha-convert/**'
      - '.github/workflows/python-tests.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'gha-sha-convert/**'
      - '.github/workflows/python-tests.yml'

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests urllib3
          # Install test dependencies if available
          if [ -f gha-sha-convert/requirements.txt ]; then
            pip install -r gha-sha-convert/requirements.txt
          fi

      - name: Lint with flake8 (if available)
        run: |
          pip install flake8 || true
          if command -v flake8 &> /dev/null; then
            cd gha-sha-convert
            # Stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # Exit-zero treats all errors as warnings
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
          fi

      - name: Run unit tests
        run: |
          cd gha-sha-convert
          python -m unittest test_gha_sha_convert -v

      - name: Test CLI functionality
        run: |
          cd gha-sha-convert
          # Test help output
          python gha_sha_convert.py --help

          # Test discovery mode (safe, no API calls)
          python gha_sha_convert.py --discovery --path .

          # Test with exclude-first-party in discovery mode
          python gha_sha_convert.py --discovery --exclude-first-party --path .

          # Test syntax validation
          python -m py_compile gha_sha_convert.py
          python -m py_compile test_gha_sha_convert.py

      - name: Test pre-commit hook functionality
        run: |
          cd gha-sha-convert
          # Create a test workflow file
          mkdir -p .github/workflows
          cat > .github/workflows/test.yml << 'EOF'
          name: Test
          on: [push]
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - uses: actions/setup-node@v3.8.1
          EOF

          # Test discovery on the test file
          python gha_sha_convert.py --discovery .github/workflows/test.yml

          # Test exclude-first-party on the test file
          python gha_sha_convert.py --discovery --exclude-first-party .github/workflows/test.yml

  integration-test:
    runs-on: ubuntu-latest
    needs: python-tests
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests urllib3

      - name: Test actual workflow processing (discovery mode)
        run: |
          cd gha-sha-convert
          # Test on actual workflow files in the repository
          python gha_sha_convert.py --discovery --path ../.github/workflows

      - name: Test error handling
        run: |
          cd gha-sha-convert
          # Test with non-existent file (should handle gracefully)
          python gha_sha_convert.py --discovery non-existent-file.yml || echo "Handled error correctly"

          # Test with invalid YAML (should handle gracefully)
          echo "invalid: yaml: content: [" > invalid.yml
          python gha_sha_convert.py --discovery invalid.yml || echo "Handled invalid YAML correctly"
          rm -f invalid.yml
