name: Trigger events on PR Approval
description: >
  Trigger events to automate the validation and auto-merge of some pull requests on approval.
inputs:
  github-token:
    description: >
      Token used to enable auto-merge, comment on the PR, and change PR milestone/label.
      This token CANNOT be the default `GITHUB_TOKEN` if auto-merge is set, otherwise the merge of the PR will not trigger a build.
      Or similarly, if labeled and milestoned events are expected to trigger a new build.
    required: true
    default: ${{ github.token }}
  creator:
    description: >
      Check if the pull request was created by this actor.
      If this field is empty or not provided, the creator check is skipped and the action will proceed for any PR approval.
    required: false
  milestone-on-approval:
    description: 'Milestone to set on the PR when it is approved. This should trigger validation of the PR.'
    required: false
  label-on-approval:
    description: 'Label to set on the PR when it is approved. This should trigger validation of the PR.'
    required: false
  auto-merge-on-approval:
    description: 'If true, auto-merge will be enabled for the PR when it is approved.'
    required: false
    default: 'true'
  merge-option:
    description: 'Merge option'
    required: false
    default: '--squash'

runs:
  using: composite
  steps:
    - name: Check if the PR is an approved PR and if creator matches
      id: check
      env:
        REVIEW_STATE: ${{ github.event.review.state }}
        PR_LOGIN: ${{ github.event.pull_request.user.login }}
        CREATOR: ${{ inputs.creator }}
      shell: bash
      run: |
        if [[ "$REVIEW_STATE" == 'approved' && ( -z "$CREATOR" || "$PR_LOGIN" == "$CREATOR" ) ]]; then
          echo "continue=true" >> $GITHUB_OUTPUT
        else
          echo "continue=false" >> $GITHUB_OUTPUT
        fi

    - name: Trigger PR validation
      if: steps.check.outputs.continue == 'true'
      env:
        MILESTONE: ${{ inputs.milestone-on-approval }}
        LABEL: ${{ inputs.label-on-approval }}
        GH_TOKEN: ${{ inputs.github-token }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        PR_URL: ${{ github.event.pull_request.html_url }}
      shell: bash
      run: |
        if [[ -n "$MILESTONE" ]]; then
          echo "::notice::Milestone PR to trigger PR validation: $PR_URL"
          gh pr edit -R $GITHUB_REPOSITORY $PR_NUMBER --milestone "$MILESTONE"
        fi
        if [[ -n "$LABEL" ]]; then
          echo "::notice::Label PR to trigger PR validation: $PR_URL"
          gh pr edit -R $GITHUB_REPOSITORY $PR_NUMBER --add-label "$LABEL"
        fi

    - uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      if: ${{ steps.check.outputs.continue == 'true' && inputs.auto-merge-on-approval == 'true' }}
      env:
        ACTOR: ${{ github.triggering_actor }}
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Setting auto-merge on PR after action from @${process.env.ACTOR}`,
          })

    - name: Enable auto-merge for Pull Request
      if: ${{ steps.check.outputs.continue == 'true' && inputs.auto-merge-on-approval == 'true' }}
      env:
        PR_URL: ${{ github.event.pull_request.html_url }}
        GH_TOKEN: ${{ inputs.github-token }}
      shell: bash
      run: gh pr merge --auto ${{ inputs.merge-option }} "$PR_URL"
