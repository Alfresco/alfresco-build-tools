---
name: Kubectl wait
description: >
  Wait for all resources inside a namespace to be ready
inputs:
  namespace:
    description: Namespace to wait for
    required: false
  wait-timeout:
    description: Timeout for the wait command
    required: false
    default: 10m
  wait-condition:
    description: Condition to wait for
    required: false
    default: Ready
  wait-resource:
    description: Resource to wait for
    required: false
    default: pods
runs:
  using: composite
  steps:
    - name: Set vars
      shell: bash
      run: |
        NAMESPACE_PARAM="${{ inputs.namespace != '' && format('-n {0}', inputs.namespace) || '' }}" >> $GITHUB_ENV

    - name: Watch resources
      shell: bash
      run: |
        kubectl get ${{ inputs.wait-resource }} --watch $NAMESPACE_PARAM &
        KWPID=$!
        kubectl wait --timeout=${{ inputs.wait-timeout }} --all=true --for=condition=${{ inputs.wait-condition }} ${{ inputs.wait-resource }} $NAMESPACE_PARAM
        kill $KWPID

    - name: Spit resources status after wait
      shell: bash
      if: always()
      run: |
        kubectl get ${{ inputs.wait-resource }} $NAMESPACE_PARAM
        kubectl describe ${{ inputs.wait-resource }} $NAMESPACE_PARAM
