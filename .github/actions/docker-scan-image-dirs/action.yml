name: Scan docker image directories
description: Scan the directories Dockerfile
inputs:
  base-directory:
    description: base directory to be scanned
    required: false
    default: .
outputs:
  image-dirs-as-json:
    description: list of directories containing Dockerfile formatted as JSON
    value: ${{ steps.scan-image-dirs.outputs.image-dirs-as-json }}
runs:
  using: composite
  steps:
    - id: scan-image-dirs
      name: Scan Image Dirs
      shell: bash
      working-directory: ${{ inputs.base-directory }}
      run: |
        IMAGE_DIRS=$(find . -type f -mindepth 2 -name Dockerfile | grep -v target | xargs -I% dirname % | xargs || echo "")
        echo "image dirs IMAGE_DIRS=$IMAGE_DIRS"
        FILTERED_IMAGE_DIRS=()
        for IMAGE_DIR in $IMAGE_DIRS; do
          echo checking $IMAGE_DIR
          if [ "$(yq '.project.properties.["docker.skip"]' $IMAGE_DIR/pom.xml)" != "true" ]; then
            echo add $IMAGE_DIR
            FILTERED_IMAGE_DIRS+=($IMAGE_DIR)
          fi
        done
        echo "filtered image dirs FILTERED_IMAGE_DIRS=${FILTERED_IMAGE_DIRS[@]}"
        IMAGE_DIRS_AS_JSON=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${FILTERED_IMAGE_DIRS[@]}")
        echo "generated image dirs matrix IMAGE_DIRS_AS_JSON=$IMAGE_DIRS_AS_JSON"
        echo "image-dirs-as-json=$IMAGE_DIRS_AS_JSON" >> $GITHUB_OUTPUT
