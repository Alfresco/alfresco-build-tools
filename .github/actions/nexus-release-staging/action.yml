name: Release Nexus staging repository
description: Release a Nexus Staging Repository. The stage repository should be in the closed status.
inputs:
  wait-for-completion:
    description: Whether the action should wait for the release to complete before returning
    required: false
    default: 'true'
  max-await-attempts:
    description: Max attempts while waiting for the repository to release
    required: false
    default: '12'
  await-sleep-time:
    description: Time in seconds between two attempts to verify if the staging repository has been released
    required: false
    default: '5'
  version:
    description: Version being released. Used to update the repository description while closing and releasing
    required: true
  staging-repository:
    description: The id of the staging repository to be promoted
    required: true
  nexus-username:
    description: The Nexus username
    required: true
  nexus-password:
    description: The Nexus password
    required: true
  nexus-url:
    description: The base URL to the Nexus server
    required: false
    default: "https://artifacts.alfresco.com/nexus"
runs:
  using: composite
  steps:
    - name: Release staging repository
      shell: bash
      env:
        WAIT_FOR_COMPLETION: ${{ inputs.wait-for-completion }}
        MAX_AWAIT_ATTEMPTS: ${{ inputs.max-await-attempts }}
        AWAIT_SLEEP_TIME: ${{ inputs.await-sleep-time }}
        NEXUS_USERNAME: ${{ inputs.nexus-username }}
        NEXUS_PASSWORD: ${{ inputs.nexus-password }}
        NEXUS_URL: ${{ inputs.nexus-url }}
        VERSION: ${{ inputs.version }}
        STAGING_REPOSITORY_ID: ${{ inputs.staging-repository }}
      run: |
        PROMOTE_PAYLOAD_CONTENT=$(envsubst < $GITHUB_ACTION_PATH/promote-payload-template.json)
        curl -f -u "${NEXUS_USERNAME}":"${NEXUS_PASSWORD}" \
          -H "Accept: application/json" \
          -H "Content-Type: application/json" \
          -d "$PROMOTE_PAYLOAD_CONTENT" \
          "${NEXUS_URL}"/service/local/staging/bulk/promote

        wait_until_released () {
            local attempt_counter=0
            until [ -z "$(curl -f -u "${NEXUS_USERNAME}":"${NEXUS_PASSWORD}" \
            -X GET "${NEXUS_URL}"/service/local/staging/profile_repositories \
            | yq -p=xml e '.stagingRepositories.data.stagingProfileRepository[]| select (.repositoryId == env(STAGING_REPOSITORY_ID))')" ]
            do
              if [ ${attempt_counter} -eq ${MAX_AWAIT_ATTEMPTS} ]
              then
                echo "Max attempts reached. Exiting..."
                exit 1
              fi

              attempt_counter=$((attempt_counter+1))
              echo "Condition not reached yet. Attempt $attempt_counter out of $MAX_AWAIT_ATTEMPTS. Retrying..."
              sleep $AWAIT_SLEEP_TIME
            done
        }

        if [[ "$WAIT_FOR_COMPLETION" == "true" ]]
        then
          echo "Waiting for staging repository $STAGING_REPOSITORY_ID to get released.
              MAX_AWAIT_ATTEMPTS: $MAX_AWAIT_ATTEMPTS, AWAIT_SLEEP_TIME: $AWAIT_SLEEP_TIME ..."
          wait_until_released
          echo "Repository $STAGING_REPOSITORY_ID successfully released!"
        fi
