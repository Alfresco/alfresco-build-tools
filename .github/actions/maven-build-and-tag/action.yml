name: Build and tag Maven project
description: Build and tag Maven project
inputs:
  java-version:
    description: The Java version to perform the build
    required: false
    default: '11'
  java-distribution:
    description: The Java distribution to perform the build
    required: false
    default: 'temurin'
  property-to-update:
    description: Property to update in addition to the version of the pom file
    required: false
  extra-maven-opts:
    description: Extra maven options for the build command line
    required: false
  maven-username:
    description: Nexus user name
    required: true
  maven-password:
    description: Nexus password
    required: true
  quay-username:
    description: Quay.io user name
    required: false
  quay-password:
    description: Quay.io password
    required: false
  docker-username:
    description: Docker.io user name
    required: false
  docker-password:
    description: Docker.io password
    required: false
  git-username:
    description: The username to commit on the git repository
    required: true
  verbose:
    description: Whether additional logs should be displayed (maven download logs for instance)
    required: false
    default: 'false'

outputs:
  version:
    description: "The version of the new tag created by this workflow"
    value: ${{ steps.update-pom-to-next-version.outputs.next-prerelease }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK
      uses: actions/setup-java@a18c333f3f14249953dab3e186e5e21bf3390f1d
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.java-distribution }}

    - name: Compute maven options
      id: compute-maven-options
      shell: bash
      run: |
        NTP='--no-transfer-progress'
        ${{ inputs.verbose }} && NTP=''
        echo "result=--show-version --settings settings.xml $NTP" >> $GITHUB_OUTPUT

    - name: Set preview version
      id: set-preview-version
      if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Create preview')
      shell: bash
      run: |
        LABELS=${{ join(github.event.pull_request.labels.*.name, ', ') }}
        CONTAINS_LABEL=${{ contains(github.event.pull_request.labels.*.name, 'Create preview') }}
        GITHUB_PR_NUMBER=PR-${{ github.event.pull_request.number }}
        echo "preview-version=0.0.1-$GITHUB_PR_NUMBER-$GITHUB_RUN_NUMBER-SNAPSHOT" >> $GITHUB_OUTPUT

    - name: Test1
      id: test1
      shell: bash
      run: |
        echo "test1"

    - name: Update pom files to the new version
      id: update-pom-to-next-version
      if: github.event_name == 'push' || ( github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Create preview') )
      uses: Alfresco/alfresco-build-tools/.github/actions/update-pom-to-next-pre-release@AAE-11861-preview-version-dev-jsokolowski
      with:
        property-to-update: ${{ inputs.property-to-update }}
        maven-cli-opts: ${{ steps.compute-maven-options.outputs.result }}
        version: ${{ steps.set-preview-version.outputs.preview-version }}
      env:
        MAVEN_USERNAME: ${{ inputs.maven-username }}
        MAVEN_PASSWORD: ${{ inputs.maven-password }}

    - name: Test2
      id: test2
      shell: bash
      run: |
        echo "test2"

    - name: Set version env variable
      if: github.event_name == 'push' || ( github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Create preview') )
      env:
        VERSION: ${{ steps.update-pom-to-next-version.outputs.next-prerelease }}
      shell: bash
      run: |
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Test3
      id: test3
      shell: bash
      run: |
        echo "test3"

    - name: Login to DockerHub Registry
      if: inputs.docker-username != '' && (github.event_name == 'push' || ( github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Create preview') ) )
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}

    - name: Test4
      id: test4
      shell: bash
      run: |
        echo "test4"

    - name: Login to Quay.io Docker Registry
      if: inputs.quay-username != ''
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ inputs.quay-username }}
        password: ${{ inputs.quay-password }}

    - name: Test5
      id: test5
      shell: bash
      run: |
        echo "test5"

    - name: Define Maven Command
      id: define_maven_command
      shell: bash
      run: |
        if [ $DO_PUSH == 'true' ]
        then
          echo "command=deploy" >> $GITHUB_OUTPUT
        else
          echo "command=verify" >> $GITHUB_OUTPUT
        fi
      env:
        DO_PUSH: ${{ github.event_name == 'push' || ( github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Create preview') ) }}

    - name: Test6
      id: test6
      shell: bash
      run: |
        echo "test6"

    - name: Build and Test with Maven (and maybe Deploy)
      shell: bash
      run: mvn ${{ steps.define_maven_command.outputs.command }} ${{ env.MAVEN_CLI_OPTS}} ${{ inputs.extra-maven-opts }}
      env:
        MAVEN_CLI_OPTS: ${{ steps.compute-maven-options.outputs.result }} -Dlogging.root.level=off -Dspring.main.banner-mode=off -Ddocker.skip
        MAVEN_USERNAME: ${{ inputs.maven-username }}
        MAVEN_PASSWORD: ${{ inputs.maven-password }}

    - name: Test7
      id: test7
      shell: bash
      run: |
        echo "test7"

    - name: Echo Longest Tests run
      shell: bash
      run: find . -name TEST-*.xml -exec grep -h testcase {} \; | awk -F '"' '{printf("%s#%s() - %.3fms\n", $4, $2, $6); }' | sort -n -k 3 | tail -20

    - name: Test8
      id: test8
      shell: bash
      run: |
        echo "test8"

    - name: Define Docker Push
      id: define_docker_push
      shell: bash
      run: |
        if [ $DO_PUSH == 'true' ]
        then
          echo "command=--push" >> $GITHUB_OUTPUT
        fi
      env:
        DO_PUSH: ${{ github.event_name == 'push' || ( github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Create preview') ) }}

    - name: Test9
      id: test9
      shell: bash
      run: |
        echo "test9"

    - name: Docker Build (and maybe Push)
      shell: bash
      run: |
        if [ -f build-and-push-docker-images.sh ]
        then
          TAG="${TAG:-$(echo ${GITHUB_HEAD_REF:-$GITHUB_REF_NAME} | sed -e 's/[^-_.[:alnum:]]/_/g')}"
          sh ./build-and-push-docker-images.sh
        else
          echo File build-and-push-docker-images.sh not found. Skipping docker build...
        fi
      env:
        PUSH_OPTION: ${{ steps.define_docker_push.outputs.command }}
        TAG: ${{env.VERSION}}

    - name: Test10
      id: test10
      shell: bash
      run: |
        echo "test10"

    - uses: Alfresco/alfresco-build-tools/.github/actions/git-commit-changes@v1.32.0
      if: github.event_name == 'push'
      with:
        username: ${{ inputs.git-username }}
        add-options: -u
        commit-message: "release $VERSION"

    - name: Test11
      id: test11
      shell: bash
      run: |
        echo "test11"

    - name: Create and push tag
      if: github.event_name == 'push'
      shell: bash
      run: |
        git tag -a $VERSION -m "Release version $VERSION"
        git push origin $VERSION
