name: Build and tag Maven project
description: Build and tag Maven project
inputs:
  java-version:
    description: The Java version to perform the build
    required: false
    default: '11'
  java-distribution:
    description: The Java distribution to perform the build
    required: false
    default: 'temurin'
  maven-build-cache-key:
    description: The build cache key to use for restoring and saving Maven build cache in Github
    required: false
    default: ''
  maven-build-cache-skip-label:
    description: The name of the label to skip maven build cache if needed
    required: false
    default: 'maven-build-cache-skip'
  property-to-update:
    description: Property to update in addition to the version of the pom file
    required: false
  extra-maven-opts:
    description: Extra maven options for the build command line
    required: false
  maven-username:
    description: Nexus user name
    required: true
  maven-password:
    description: Nexus password
    required: true
  maven-version:
    description: Maven version to setup, i.e. 3.9+ for Maven Build Cache extension
    required: false
    default: ''
  quay-username:
    description: Quay.io user name
    required: false
  quay-password:
    description: Quay.io password
    required: false
  ghcr-username:
    description: ghcr.io user name
    required: false
  ghcr-password:
    description: ghcr.io password
    required: false
  upload-jars:
    description: whether jar files should be uploaded or not as part of the build
    required: false
    default: 'false'
  upload-jars-name:
    description: name of the artifact where jar files should be uploaded
    required: false
    default: 'build'
  upload-jars-path:
    description: path expression to select the jar files to upload
    required: false
    default: '**/target/*.jar'
  docker-username:
    description: Docker.io user name
    required: false
  docker-password:
    description: Docker.io password
    required: false
  git-username:
    description: The username to commit on the git repository
    required: true
  verbose:
    description: Whether additional logs should be displayed (maven download logs for instance)
    required: false
    default: 'false'
  preview-label:
    description: The label name for creating a preview version
    required: false
    default: 'preview'
  upload-coverage:
    description: whether coverage files should be uploaded or not as part of the build
    required: false
    default: 'false'
  reuse-testcontainers:
    description: Whether testcontainers should be reused
    required: false
    default: 'false'
  skip-tests-label:
    description: The label name for skipping tests
    required: false
    default: 'skip-tests'
  sonar-token:
    description: 'SonarCloud token'
    required: false
  aggregate-report-path:
    description: 'Path of the aggregated JaCoCo report'
    required: false
  project-key:
    description: 'SonarCloud project key'
    required: false
  sonar-host-url:
    description: 'SonarCloud host url'
    required: false
    default: 'https://sonarcloud.io'
  sonar-organization:
    description: 'SonarCloud organization'
    required: false
    default: 'alfresco'

outputs:
  version:
    description: "The version of the new tag created by this workflow"
    value: ${{ steps.update-pom-to-next-version.outputs.next-prerelease }}
  skip-tests:
    description: "Whether tests were skipped during build or not"
    value: ${{ steps.maven-configure.outputs.skip-tests }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - uses: Alfresco/alfresco-build-tools/.github/actions/maven-configure@v8.26.0
      id: maven-configure
      with:
        java-version: ${{ inputs.java-version }}
        java-distribution: ${{ inputs.java-distribution }}
        maven-version: ${{ inputs.maven-version }}
        maven-build-cache-key: ${{ inputs.maven-build-cache-key }}
        maven-build-cache-skip-label: ${{ inputs.maven-build-cache-skip-label }}
        skip-tests-label: ${{ inputs.skip-tests-label }}
        verbose: ${{ inputs.verbose }}
        preview-label: ${{ inputs.preview-label }}

    - name: Update pom files to the new version
      id: update-pom-to-next-version
      if: github.event_name == 'push' || env.IS_PREVIEW == 'true'
      uses: Alfresco/alfresco-build-tools/.github/actions/update-pom-to-next-pre-release@v8.26.0
      with:
        property-to-update: ${{ inputs.property-to-update }}
        maven-cli-opts: ${{ steps.maven-configure.outputs.maven-options }}
        version: ${{ steps.maven-configure.outputs.preview-version }}
      env:
        MAVEN_USERNAME: ${{ inputs.maven-username }}
        MAVEN_PASSWORD: ${{ inputs.maven-password }}

    - name: Set version env variable
      if: github.event_name == 'push' || env.IS_PREVIEW == 'true'
      env:
        VERSION: ${{ steps.update-pom-to-next-version.outputs.next-prerelease }}
      shell: bash
      run: |
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "## ðŸ“‹ Built version: $VERSION" >> $GITHUB_STEP_SUMMARY

    - name: Login to DockerHub Registry
      if: inputs.docker-username != '' && (github.event_name == 'push' || env.IS_PREVIEW == 'true')
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: docker.io
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}

    - name: Login to Quay.io Docker Registry
      if: inputs.quay-username != ''
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: quay.io
        username: ${{ inputs.quay-username }}
        password: ${{ inputs.quay-password }}

    - name: Login to ghcr.io Docker Registry
      if: inputs.ghcr-username != ''
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: ghcr.io
        username: ${{ inputs.ghcr-username }}
        password: ${{ inputs.ghcr-password }}

    - name: Define Maven Command
      id: define_maven_command
      shell: bash
      run: |
        if [ $DO_PUSH == 'true' ]
        then
          echo "command=deploy" >> $GITHUB_OUTPUT
        else
          echo "command=verify" >> $GITHUB_OUTPUT
        fi
      env:
        DO_PUSH: ${{ github.event_name == 'push' || env.IS_PREVIEW == 'true' }}

    - name: Enable testcontainers reuse option
      if: inputs.reuse-testcontainers == 'true'
      shell: bash
      run: |
        echo "testcontainers.reuse.enable=true" > ~/.testcontainers.properties
        echo "TESTCONTAINERS_RYUK_DISABLED=true" >> $GITHUB_ENV

    - name: Set SONAR_SCANNER_OPTS
      if: inputs.sonar-token != '' && env.SKIP_TESTS != 'true' && github.event.pull_request.draft == false
      shell: bash
      run: echo "SONAR_SCANNER_OPTS=sonar:sonar -Dsonar.host.url=${{ inputs.sonar-host-url }} -Dsonar.organization=${{ inputs.sonar-organization }} -Dsonar.projectKey=${{ inputs.project-key }} -Dsonar.coverage.jacoco.xmlReportPaths=${{ inputs.aggregate-report-path }}" >> $GITHUB_ENV

    - name: Build and Test with Maven (and maybe Deploy)
      shell: bash
      run: mvn ${{ steps.define_maven_command.outputs.command }} ${{ env.MAVEN_CLI_OPTS }} ${{ inputs.extra-maven-opts }} ${{ env.SONAR_SCANNER_OPTS }}
      env:
        MAVEN_CLI_OPTS: ${{ steps.maven-configure.outputs.maven-options }} -Dlogging.root.level=off -Dspring.main.banner-mode=off -Ddocker.skip -Dmaven.build.cache.enabled=${{ env.MAVEN_BUILD_CACHE_ENABLED }}
        MAVEN_USERNAME: ${{ inputs.maven-username }}
        MAVEN_PASSWORD: ${{ inputs.maven-password }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}

    - name: Remove running docker containers
      if: inputs.reuse-testcontainers == 'true'
      shell: bash
      run: docker rm -f $(docker ps -a -q)
      continue-on-error: true

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: inputs.upload-jars == 'true'
      with:
        name: ${{ inputs.upload-jars-name }}
        retention-days: 1
        path: |
          ${{ inputs.upload-jars-path }}

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: inputs.upload-coverage == 'true' && env.SKIP_TESTS != 'true'
      with:
        name: coverage
        retention-days: 1
        path: |
          **/target/site/jacoco-aggregate/jacoco.xml

    - name: Echo Longest Tests run
      if: env.SKIP_TESTS != 'true'
      shell: bash
      run: find . -name TEST-*.xml -exec grep -h testcase {} \; | awk -F '"' '{printf("%s#%s() - %.3fms\n", $4, $2, $6); }' | sort -n -k 3 | tail -20

    - uses: Alfresco/alfresco-build-tools/.github/actions/git-commit-changes@v8.26.0
      if: github.event_name == 'push'
      with:
        username: ${{ inputs.git-username }}
        add-options: -u
        commit-message: "release $VERSION"

    - name: Create and push tag
      if: github.event_name == 'push'
      shell: bash
      run: |
        git tag -a $VERSION -m "Release version $VERSION"
        git push origin $VERSION

    - name: Submit Dependency Graph
      if: github.event_name == 'push'
      uses: advanced-security/maven-dependency-submission-action@b275d12641ac2d2108b2cbb7598b154ad2f2cee8 # v5.0.0
      env:
        MAVEN_CLI_OPTS: ${{ steps.maven-configure.outputs.maven-options }} -Dlogging.root.level=off -Dspring.main.banner-mode=off -Ddocker.skip
        MAVEN_USERNAME: ${{ inputs.maven-username }}
        MAVEN_PASSWORD: ${{ inputs.maven-password }}

    - name: Clean m2 cache
      if: github.event_name == 'push'
      shell: bash
      run: |
        rm -fr ~/.m2/repository/org/activiti
        rm -fr ~/.m2/repository/com/alfresco

    - name: Save maven cache
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      if: github.event_name == 'push' || env.IS_PREVIEW == 'true'
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

    - name: Save maven build cache on push
      uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      if: env.MAVEN_BUILD_CACHE_ENABLED == 'true'
      with:
        path: ~/.m2/build-cache
        key: ${{ env.MAVEN_BUILD_CACHE_KEY }}
