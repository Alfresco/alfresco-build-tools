name: "Verify and test helm chart"
description: "Setup environment and run helm chart tests"
inputs:
  aws_access_key_id:
    description: "ID of AWS access key"
    required: true
  aws_secret_access_key:
    description: "AWS access key"
    required: true
  docker_username:
    description: "username for Docker Hub"
    required: true
  docker_password:
    description: "password for Docker Hub"
    required: true
  quay_username:
    description: "username for Quay.io"
    required: false
  quay_password:
    description: "password for Quay.io"
    required: false
  acm_certificate:
    description: "certificate for Amazon Certificate Manager"
    required: true
  aws_sg:
    description: "AWS Security Group"
    required: true
  release_prefix:
    description: "prefix used for release and ingress name"
    required: true
  chart_name:
    description: "full name of helm chart directory"
    required: true
  test_newman:
    description: "whether to execute tests with newman or not"
    required: true
  acs_version:
    description: "version of ACS to verify"
    required: false
    default: ""
  domain:
    description: "domain to access the cluster"
    required: false
    default: dev.envalfresco.com
  aws_region:
    description: "AWS region to create cluster in"
    required: false
    default: eu-west-1
  kubectl_version:
    description: "version of the kubectl CLI"
    required: false
    default: "v1.23.6"
  skip_checkout:
    description: "Do not checkout the branch again"
    required: false
    default: "false"

runs:
  using: composite
  steps:
    - name: Checkout
      if: inputs.skip_checkout == 'false'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
    - uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
      with:
        aws-region: ${{ inputs.aws_region }}
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
    - uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0
      with:
        version: ${{ inputs.kubectl_version }}
    - name: Login to Quay.io
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        registry: quay.io
        username: ${{ inputs.quay_username }}
        password: ${{ inputs.quay_password }}
      if: ${{ inputs.acs_version != 'community' }}
    - name: Login to Docker Hub
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
      with:
        username: ${{ inputs.docker_username}}
        password: ${{ inputs.docker_password }}
    - name: Get branch name
      uses: >-
        Alfresco/alfresco-build-tools/.github/actions/get-branch-name@v8.16.0
    - name: Get commit msg
      uses: >-
        Alfresco/alfresco-build-tools/.github/actions/get-commit-message@v8.16.0
    - name: Get a namespace to deploy on
      id: k8sns
      uses: >-
        Alfresco/alfresco-build-tools/.github/actions/dbp-charts/kubernetes-valid-ns@v8.16.0
      with:
        branch_name: ${{ env.BRANCH_NAME }}
        release_prefix: ${{ inputs.release_prefix }}
    - name: Run helm chart test script
      run: ${{ github.action_path }}/helm_install.sh
      shell: bash
      env:
        K8SNS: ${{ steps.k8sns.outputs.namespace }}
        ACM_CERTIFICATE: ${{ inputs.acm_certificate }}
        AWS_SG: ${{ inputs.aws_sg }}
        DOMAIN: ${{ inputs.domain }}
        ACS_VERSION: ${{ inputs.acs_version }}
        PROJECT_NAME: ${{ inputs.chart_name }}
        RELEASE_PREFIX: ${{ inputs.release_prefix }}
        TEST_NEWMAN: ${{ inputs.test_newman }}
    - name: Upload helm deployments logs as artifacts
      if: always()
      uses: >-
        Alfresco/alfresco-build-tools/.github/actions/kubectl-keep-nslogs@v8.16.0
      with:
        namespace: ${{ steps.k8sns.outputs.namespace }}
    - name: Uninstall Helm releases
      if: always() && ! contains(env.COMMIT_MESSAGE, '[keep env]')
      run: ${{ github.action_path }}/helm_delete.sh
      shell: bash
      env:
        RELEASE_PREFIX: ${{ inputs.release_prefix }}
        K8SNS: ${{ steps.k8sns.outputs.namespace }}
